version: 0.2

phases:
  install:
    commands:
      - echo Installing Java 17...
      - yum install -y java-17-amazon-corretto-devel  # Install Java 17
      - export JAVA_HOME=/usr/lib/jvm/java-17-amazon-corretto
      - export PATH=$JAVA_HOME/bin:$PATH
      - java -version  # Verify Java 17 is installed

  pre_build:
    commands:
      - echo Starting pre-build steps...
      - echo Installing Maven dependencies...
      - mvn clean install -DskipTests -X  # Run Maven with debug logs to get more details
      - echo Logging in to Amazon ECR...
      - aws --version
      - REPOSITORY_URI=971422700488.dkr.ecr.us-east-1.amazonaws.com/myrepo1
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $REPOSITORY_URI
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=build-$(echo $CODEBUILD_BUILD_ID | awk -F":" '{print $2}')

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"course-service","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo Writing image definitions file...
      - DOCKER_CONTAINER_NAME=myrepo1
      - printf '[{"name":"%s","imageUri":"%s"}]' $DOCKER_CONTAINER_NAME $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
      - echo $DOCKER_CONTAINER_NAME
      - echo printing imagedefinitions.json
      - cat imagedefinitions.json

artifacts:
  files:
    - imagedefinitions.json
    - target/course-service.jar
